Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: CODE

    2 CODE: CODE BLOCK
    3     | BLOCK

    4 BLOCK: DECLARATION separator
    5      | ASSIGNMENT separator
    6      | LENGTH separator
    7      | INPUT separator
    8      | OUTPUT separator
    9      | DECISION
   10      | ITERATION

   11 DECLARATION: op_dim open_bracket VARIABLES close_bracket op_as open_bracket DATATYPES close_bracket

   12 VARIABLES: VARIABLES comma id
   13          | id

   14 DATATYPES: DATATYPES comma DATATYPE
   15          | DATATYPE

   16 DATATYPE: int_type
   17         | real_type
   18         | string_type

   19 ASSIGNMENT: id op_assign ASSIGNMENT
   20           | id op_assign EXPRESSION

   21 EXPRESSION: EXPRESSION op_sum TERM
   22           | EXPRESSION op_sub TERM
   23           | TERM

   24 TERM: TERM op_mult FACTOR
   25     | TERM op_div FACTOR
   26     | FACTOR

   27 FACTOR: open_parenthesis EXPRESSION close_parenthesis
   28       | id
   29       | CONSTANT
   30       | LENGTH

   31 CONSTANT: int_constant
   32         | real_constant
   33         | string_constant

   34 LENGTH: fun_long open_parenthesis LIST close_parenthesis

   35 $@1: %empty

   36 LIST: open_bracket $@1 ITEMS close_bracket

   37 ITEMS: ITEMS comma ITEM
   38      | ITEM

   39 ITEM: CONSTANT
   40     | id

   41 INPUT: op_get id

   42 OUTPUT: op_display EXPRESSION

   43 DECISION: IF_EVALUATOR CODE op_endif

   44 $@2: %empty

   45 DECISION: IF_EVALUATOR CODE op_else $@2 CODE op_endif

   46 IF_EVALUATOR: op_if open_parenthesis CONDITION close_parenthesis

   47 $@3: %empty

   48 CONDITION: COMPARATION op_and $@3 COMPARATION

   49 $@4: %empty

   50 CONDITION: COMPARATION op_or $@4 COMPARATION
   51          | COMPARATION

   52 COMPARATION: ITEM COMPARATOR ITEM

   53 COMPARATOR: op_eq
   54           | op_lt
   55           | op_le
   56           | op_gt
   57           | op_ge
   58           | op_ne

   59 $@5: %empty

   60 $@6: %empty

   61 ITERATION: op_while $@5 open_parenthesis CONDITION close_parenthesis $@6 CODE op_endwhile

   62 $@7: %empty

   63 $@8: %empty

   64 ITERATION: op_while id op_in $@7 LIST op_do $@8 CODE op_endwhile


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    id <str_val> (258) 12 13 19 20 28 40 41 64
    int_constant <int_val> (259) 31
    real_constant <real_val> (260) 32
    string_constant <str_val> (261) 33
    op_assign (262) 19 20
    op_sum (263) 21
    op_sub (264) 22
    op_mult (265) 24
    op_div (266) 25
    separator (267) 4 5 6 7 8
    op_eq (268) 53
    op_lt (269) 54
    op_le (270) 55
    op_gt (271) 56
    op_ge (272) 57
    op_ne (273) 58
    op_and (274) 48
    op_or (275) 50
    op_if (276) 46
    op_else (277) 45
    op_endif (278) 43 45
    op_while (279) 61 64
    op_endwhile (280) 61 64
    open_parenthesis (281) 27 34 46 61
    close_parenthesis (282) 27 34 46 61
    op_dim (283) 11
    op_as (284) 11
    open_bracket (285) 11 36
    close_bracket (286) 11 36
    comma (287) 12 14 37
    int_type (288) 16
    real_type (289) 17
    string_type (290) 18
    op_display (291) 42
    op_get (292) 41
    fun_long (293) 34
    op_in (294) 64
    op_do (295) 64


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    PROGRAM (42)
        on left: 1
        on right: 0
    CODE (43)
        on left: 2 3
        on right: 1 2 43 45 61 64
    BLOCK (44)
        on left: 4 5 6 7 8 9 10
        on right: 2 3
    DECLARATION (45)
        on left: 11
        on right: 4
    VARIABLES (46)
        on left: 12 13
        on right: 11 12
    DATATYPES (47)
        on left: 14 15
        on right: 11 14
    DATATYPE (48)
        on left: 16 17 18
        on right: 14 15
    ASSIGNMENT (49)
        on left: 19 20
        on right: 5 19
    EXPRESSION (50)
        on left: 21 22 23
        on right: 20 21 22 27 42
    TERM (51)
        on left: 24 25 26
        on right: 21 22 23 24 25
    FACTOR (52)
        on left: 27 28 29 30
        on right: 24 25 26
    CONSTANT (53)
        on left: 31 32 33
        on right: 29 39
    LENGTH (54)
        on left: 34
        on right: 6 30
    LIST (55)
        on left: 36
        on right: 34 64
    $@1 (56)
        on left: 35
        on right: 36
    ITEMS (57)
        on left: 37 38
        on right: 36 37
    ITEM (58)
        on left: 39 40
        on right: 37 38 52
    INPUT (59)
        on left: 41
        on right: 7
    OUTPUT (60)
        on left: 42
        on right: 8
    DECISION (61)
        on left: 43 45
        on right: 9
    $@2 (62)
        on left: 44
        on right: 45
    IF_EVALUATOR (63)
        on left: 46
        on right: 43 45
    CONDITION (64)
        on left: 48 50 51
        on right: 46 61
    $@3 (65)
        on left: 47
        on right: 48
    $@4 (66)
        on left: 49
        on right: 50
    COMPARATION (67)
        on left: 52
        on right: 48 50 51
    COMPARATOR (68)
        on left: 53 54 55 56 57 58
        on right: 52
    ITERATION (69)
        on left: 61 64
        on right: 10
    $@5 (70)
        on left: 59
        on right: 61
    $@6 (71)
        on left: 60
        on right: 61
    $@7 (72)
        on left: 62
        on right: 64
    $@8 (73)
        on left: 63
        on right: 64


State 0

    0 $accept: . PROGRAM $end

    id          shift, and go to state 1
    op_if       shift, and go to state 2
    op_while    shift, and go to state 3
    op_dim      shift, and go to state 4
    op_display  shift, and go to state 5
    op_get      shift, and go to state 6
    fun_long    shift, and go to state 7

    PROGRAM       go to state 8
    CODE          go to state 9
    BLOCK         go to state 10
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 1

   19 ASSIGNMENT: id . op_assign ASSIGNMENT
   20           | id . op_assign EXPRESSION

    op_assign  shift, and go to state 19


State 2

   46 IF_EVALUATOR: op_if . open_parenthesis CONDITION close_parenthesis

    open_parenthesis  shift, and go to state 20


State 3

   61 ITERATION: op_while . $@5 open_parenthesis CONDITION close_parenthesis $@6 CODE op_endwhile
   64          | op_while . id op_in $@7 LIST op_do $@8 CODE op_endwhile

    id  shift, and go to state 21

    $default  reduce using rule 59 ($@5)

    $@5  go to state 22


State 4

   11 DECLARATION: op_dim . open_bracket VARIABLES close_bracket op_as open_bracket DATATYPES close_bracket

    open_bracket  shift, and go to state 23


State 5

   42 OUTPUT: op_display . EXPRESSION

    id                shift, and go to state 24
    int_constant      shift, and go to state 25
    real_constant     shift, and go to state 26
    string_constant   shift, and go to state 27
    open_parenthesis  shift, and go to state 28
    fun_long          shift, and go to state 7

    EXPRESSION  go to state 29
    TERM        go to state 30
    FACTOR      go to state 31
    CONSTANT    go to state 32
    LENGTH      go to state 33


State 6

   41 INPUT: op_get . id

    id  shift, and go to state 34


State 7

   34 LENGTH: fun_long . open_parenthesis LIST close_parenthesis

    open_parenthesis  shift, and go to state 35


State 8

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 36


State 9

    1 PROGRAM: CODE .
    2 CODE: CODE . BLOCK

    id          shift, and go to state 1
    op_if       shift, and go to state 2
    op_while    shift, and go to state 3
    op_dim      shift, and go to state 4
    op_display  shift, and go to state 5
    op_get      shift, and go to state 6
    fun_long    shift, and go to state 7

    $default  reduce using rule 1 (PROGRAM)

    BLOCK         go to state 37
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 10

    3 CODE: BLOCK .

    $default  reduce using rule 3 (CODE)


State 11

    4 BLOCK: DECLARATION . separator

    separator  shift, and go to state 38


State 12

    5 BLOCK: ASSIGNMENT . separator

    separator  shift, and go to state 39


State 13

    6 BLOCK: LENGTH . separator

    separator  shift, and go to state 40


State 14

    7 BLOCK: INPUT . separator

    separator  shift, and go to state 41


State 15

    8 BLOCK: OUTPUT . separator

    separator  shift, and go to state 42


State 16

    9 BLOCK: DECISION .

    $default  reduce using rule 9 (BLOCK)


State 17

   43 DECISION: IF_EVALUATOR . CODE op_endif
   45         | IF_EVALUATOR . CODE op_else $@2 CODE op_endif

    id          shift, and go to state 1
    op_if       shift, and go to state 2
    op_while    shift, and go to state 3
    op_dim      shift, and go to state 4
    op_display  shift, and go to state 5
    op_get      shift, and go to state 6
    fun_long    shift, and go to state 7

    CODE          go to state 43
    BLOCK         go to state 10
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 18

   10 BLOCK: ITERATION .

    $default  reduce using rule 10 (BLOCK)


State 19

   19 ASSIGNMENT: id op_assign . ASSIGNMENT
   20           | id op_assign . EXPRESSION

    id                shift, and go to state 44
    int_constant      shift, and go to state 25
    real_constant     shift, and go to state 26
    string_constant   shift, and go to state 27
    open_parenthesis  shift, and go to state 28
    fun_long          shift, and go to state 7

    ASSIGNMENT  go to state 45
    EXPRESSION  go to state 46
    TERM        go to state 30
    FACTOR      go to state 31
    CONSTANT    go to state 32
    LENGTH      go to state 33


State 20

   46 IF_EVALUATOR: op_if open_parenthesis . CONDITION close_parenthesis

    id               shift, and go to state 47
    int_constant     shift, and go to state 25
    real_constant    shift, and go to state 26
    string_constant  shift, and go to state 27

    CONSTANT     go to state 48
    ITEM         go to state 49
    CONDITION    go to state 50
    COMPARATION  go to state 51


State 21

   64 ITERATION: op_while id . op_in $@7 LIST op_do $@8 CODE op_endwhile

    op_in  shift, and go to state 52


State 22

   61 ITERATION: op_while $@5 . open_parenthesis CONDITION close_parenthesis $@6 CODE op_endwhile

    open_parenthesis  shift, and go to state 53


State 23

   11 DECLARATION: op_dim open_bracket . VARIABLES close_bracket op_as open_bracket DATATYPES close_bracket

    id  shift, and go to state 54

    VARIABLES  go to state 55


State 24

   28 FACTOR: id .

    $default  reduce using rule 28 (FACTOR)


State 25

   31 CONSTANT: int_constant .

    $default  reduce using rule 31 (CONSTANT)


State 26

   32 CONSTANT: real_constant .

    $default  reduce using rule 32 (CONSTANT)


State 27

   33 CONSTANT: string_constant .

    $default  reduce using rule 33 (CONSTANT)


State 28

   27 FACTOR: open_parenthesis . EXPRESSION close_parenthesis

    id                shift, and go to state 24
    int_constant      shift, and go to state 25
    real_constant     shift, and go to state 26
    string_constant   shift, and go to state 27
    open_parenthesis  shift, and go to state 28
    fun_long          shift, and go to state 7

    EXPRESSION  go to state 56
    TERM        go to state 30
    FACTOR      go to state 31
    CONSTANT    go to state 32
    LENGTH      go to state 33


State 29

   21 EXPRESSION: EXPRESSION . op_sum TERM
   22           | EXPRESSION . op_sub TERM
   42 OUTPUT: op_display EXPRESSION .

    op_sum  shift, and go to state 57
    op_sub  shift, and go to state 58

    $default  reduce using rule 42 (OUTPUT)


State 30

   23 EXPRESSION: TERM .
   24 TERM: TERM . op_mult FACTOR
   25     | TERM . op_div FACTOR

    op_mult  shift, and go to state 59
    op_div   shift, and go to state 60

    $default  reduce using rule 23 (EXPRESSION)


State 31

   26 TERM: FACTOR .

    $default  reduce using rule 26 (TERM)


State 32

   29 FACTOR: CONSTANT .

    $default  reduce using rule 29 (FACTOR)


State 33

   30 FACTOR: LENGTH .

    $default  reduce using rule 30 (FACTOR)


State 34

   41 INPUT: op_get id .

    $default  reduce using rule 41 (INPUT)


State 35

   34 LENGTH: fun_long open_parenthesis . LIST close_parenthesis

    open_bracket  shift, and go to state 61

    LIST  go to state 62


State 36

    0 $accept: PROGRAM $end .

    $default  accept


State 37

    2 CODE: CODE BLOCK .

    $default  reduce using rule 2 (CODE)


State 38

    4 BLOCK: DECLARATION separator .

    $default  reduce using rule 4 (BLOCK)


State 39

    5 BLOCK: ASSIGNMENT separator .

    $default  reduce using rule 5 (BLOCK)


State 40

    6 BLOCK: LENGTH separator .

    $default  reduce using rule 6 (BLOCK)


State 41

    7 BLOCK: INPUT separator .

    $default  reduce using rule 7 (BLOCK)


State 42

    8 BLOCK: OUTPUT separator .

    $default  reduce using rule 8 (BLOCK)


State 43

    2 CODE: CODE . BLOCK
   43 DECISION: IF_EVALUATOR CODE . op_endif
   45         | IF_EVALUATOR CODE . op_else $@2 CODE op_endif

    id          shift, and go to state 1
    op_if       shift, and go to state 2
    op_else     shift, and go to state 63
    op_endif    shift, and go to state 64
    op_while    shift, and go to state 3
    op_dim      shift, and go to state 4
    op_display  shift, and go to state 5
    op_get      shift, and go to state 6
    fun_long    shift, and go to state 7

    BLOCK         go to state 37
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 44

   19 ASSIGNMENT: id . op_assign ASSIGNMENT
   20           | id . op_assign EXPRESSION
   28 FACTOR: id .

    op_assign  shift, and go to state 19

    $default  reduce using rule 28 (FACTOR)


State 45

   19 ASSIGNMENT: id op_assign ASSIGNMENT .

    $default  reduce using rule 19 (ASSIGNMENT)


State 46

   20 ASSIGNMENT: id op_assign EXPRESSION .
   21 EXPRESSION: EXPRESSION . op_sum TERM
   22           | EXPRESSION . op_sub TERM

    op_sum  shift, and go to state 57
    op_sub  shift, and go to state 58

    $default  reduce using rule 20 (ASSIGNMENT)


State 47

   40 ITEM: id .

    $default  reduce using rule 40 (ITEM)


State 48

   39 ITEM: CONSTANT .

    $default  reduce using rule 39 (ITEM)


State 49

   52 COMPARATION: ITEM . COMPARATOR ITEM

    op_eq  shift, and go to state 65
    op_lt  shift, and go to state 66
    op_le  shift, and go to state 67
    op_gt  shift, and go to state 68
    op_ge  shift, and go to state 69
    op_ne  shift, and go to state 70

    COMPARATOR  go to state 71


State 50

   46 IF_EVALUATOR: op_if open_parenthesis CONDITION . close_parenthesis

    close_parenthesis  shift, and go to state 72


State 51

   48 CONDITION: COMPARATION . op_and $@3 COMPARATION
   50          | COMPARATION . op_or $@4 COMPARATION
   51          | COMPARATION .

    op_and  shift, and go to state 73
    op_or   shift, and go to state 74

    $default  reduce using rule 51 (CONDITION)


State 52

   64 ITERATION: op_while id op_in . $@7 LIST op_do $@8 CODE op_endwhile

    $default  reduce using rule 62 ($@7)

    $@7  go to state 75


State 53

   61 ITERATION: op_while $@5 open_parenthesis . CONDITION close_parenthesis $@6 CODE op_endwhile

    id               shift, and go to state 47
    int_constant     shift, and go to state 25
    real_constant    shift, and go to state 26
    string_constant  shift, and go to state 27

    CONSTANT     go to state 48
    ITEM         go to state 49
    CONDITION    go to state 76
    COMPARATION  go to state 51


State 54

   13 VARIABLES: id .

    $default  reduce using rule 13 (VARIABLES)


State 55

   11 DECLARATION: op_dim open_bracket VARIABLES . close_bracket op_as open_bracket DATATYPES close_bracket
   12 VARIABLES: VARIABLES . comma id

    close_bracket  shift, and go to state 77
    comma          shift, and go to state 78


State 56

   21 EXPRESSION: EXPRESSION . op_sum TERM
   22           | EXPRESSION . op_sub TERM
   27 FACTOR: open_parenthesis EXPRESSION . close_parenthesis

    op_sum             shift, and go to state 57
    op_sub             shift, and go to state 58
    close_parenthesis  shift, and go to state 79


State 57

   21 EXPRESSION: EXPRESSION op_sum . TERM

    id                shift, and go to state 24
    int_constant      shift, and go to state 25
    real_constant     shift, and go to state 26
    string_constant   shift, and go to state 27
    open_parenthesis  shift, and go to state 28
    fun_long          shift, and go to state 7

    TERM      go to state 80
    FACTOR    go to state 31
    CONSTANT  go to state 32
    LENGTH    go to state 33


State 58

   22 EXPRESSION: EXPRESSION op_sub . TERM

    id                shift, and go to state 24
    int_constant      shift, and go to state 25
    real_constant     shift, and go to state 26
    string_constant   shift, and go to state 27
    open_parenthesis  shift, and go to state 28
    fun_long          shift, and go to state 7

    TERM      go to state 81
    FACTOR    go to state 31
    CONSTANT  go to state 32
    LENGTH    go to state 33


State 59

   24 TERM: TERM op_mult . FACTOR

    id                shift, and go to state 24
    int_constant      shift, and go to state 25
    real_constant     shift, and go to state 26
    string_constant   shift, and go to state 27
    open_parenthesis  shift, and go to state 28
    fun_long          shift, and go to state 7

    FACTOR    go to state 82
    CONSTANT  go to state 32
    LENGTH    go to state 33


State 60

   25 TERM: TERM op_div . FACTOR

    id                shift, and go to state 24
    int_constant      shift, and go to state 25
    real_constant     shift, and go to state 26
    string_constant   shift, and go to state 27
    open_parenthesis  shift, and go to state 28
    fun_long          shift, and go to state 7

    FACTOR    go to state 83
    CONSTANT  go to state 32
    LENGTH    go to state 33


State 61

   36 LIST: open_bracket . $@1 ITEMS close_bracket

    $default  reduce using rule 35 ($@1)

    $@1  go to state 84


State 62

   34 LENGTH: fun_long open_parenthesis LIST . close_parenthesis

    close_parenthesis  shift, and go to state 85


State 63

   45 DECISION: IF_EVALUATOR CODE op_else . $@2 CODE op_endif

    $default  reduce using rule 44 ($@2)

    $@2  go to state 86


State 64

   43 DECISION: IF_EVALUATOR CODE op_endif .

    $default  reduce using rule 43 (DECISION)


State 65

   53 COMPARATOR: op_eq .

    $default  reduce using rule 53 (COMPARATOR)


State 66

   54 COMPARATOR: op_lt .

    $default  reduce using rule 54 (COMPARATOR)


State 67

   55 COMPARATOR: op_le .

    $default  reduce using rule 55 (COMPARATOR)


State 68

   56 COMPARATOR: op_gt .

    $default  reduce using rule 56 (COMPARATOR)


State 69

   57 COMPARATOR: op_ge .

    $default  reduce using rule 57 (COMPARATOR)


State 70

   58 COMPARATOR: op_ne .

    $default  reduce using rule 58 (COMPARATOR)


State 71

   52 COMPARATION: ITEM COMPARATOR . ITEM

    id               shift, and go to state 47
    int_constant     shift, and go to state 25
    real_constant    shift, and go to state 26
    string_constant  shift, and go to state 27

    CONSTANT  go to state 48
    ITEM      go to state 87


State 72

   46 IF_EVALUATOR: op_if open_parenthesis CONDITION close_parenthesis .

    $default  reduce using rule 46 (IF_EVALUATOR)


State 73

   48 CONDITION: COMPARATION op_and . $@3 COMPARATION

    $default  reduce using rule 47 ($@3)

    $@3  go to state 88


State 74

   50 CONDITION: COMPARATION op_or . $@4 COMPARATION

    $default  reduce using rule 49 ($@4)

    $@4  go to state 89


State 75

   64 ITERATION: op_while id op_in $@7 . LIST op_do $@8 CODE op_endwhile

    open_bracket  shift, and go to state 61

    LIST  go to state 90


State 76

   61 ITERATION: op_while $@5 open_parenthesis CONDITION . close_parenthesis $@6 CODE op_endwhile

    close_parenthesis  shift, and go to state 91


State 77

   11 DECLARATION: op_dim open_bracket VARIABLES close_bracket . op_as open_bracket DATATYPES close_bracket

    op_as  shift, and go to state 92


State 78

   12 VARIABLES: VARIABLES comma . id

    id  shift, and go to state 93


State 79

   27 FACTOR: open_parenthesis EXPRESSION close_parenthesis .

    $default  reduce using rule 27 (FACTOR)


State 80

   21 EXPRESSION: EXPRESSION op_sum TERM .
   24 TERM: TERM . op_mult FACTOR
   25     | TERM . op_div FACTOR

    op_mult  shift, and go to state 59
    op_div   shift, and go to state 60

    $default  reduce using rule 21 (EXPRESSION)


State 81

   22 EXPRESSION: EXPRESSION op_sub TERM .
   24 TERM: TERM . op_mult FACTOR
   25     | TERM . op_div FACTOR

    op_mult  shift, and go to state 59
    op_div   shift, and go to state 60

    $default  reduce using rule 22 (EXPRESSION)


State 82

   24 TERM: TERM op_mult FACTOR .

    $default  reduce using rule 24 (TERM)


State 83

   25 TERM: TERM op_div FACTOR .

    $default  reduce using rule 25 (TERM)


State 84

   36 LIST: open_bracket $@1 . ITEMS close_bracket

    id               shift, and go to state 47
    int_constant     shift, and go to state 25
    real_constant    shift, and go to state 26
    string_constant  shift, and go to state 27

    CONSTANT  go to state 48
    ITEMS     go to state 94
    ITEM      go to state 95


State 85

   34 LENGTH: fun_long open_parenthesis LIST close_parenthesis .

    $default  reduce using rule 34 (LENGTH)


State 86

   45 DECISION: IF_EVALUATOR CODE op_else $@2 . CODE op_endif

    id          shift, and go to state 1
    op_if       shift, and go to state 2
    op_while    shift, and go to state 3
    op_dim      shift, and go to state 4
    op_display  shift, and go to state 5
    op_get      shift, and go to state 6
    fun_long    shift, and go to state 7

    CODE          go to state 96
    BLOCK         go to state 10
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 87

   52 COMPARATION: ITEM COMPARATOR ITEM .

    $default  reduce using rule 52 (COMPARATION)


State 88

   48 CONDITION: COMPARATION op_and $@3 . COMPARATION

    id               shift, and go to state 47
    int_constant     shift, and go to state 25
    real_constant    shift, and go to state 26
    string_constant  shift, and go to state 27

    CONSTANT     go to state 48
    ITEM         go to state 49
    COMPARATION  go to state 97


State 89

   50 CONDITION: COMPARATION op_or $@4 . COMPARATION

    id               shift, and go to state 47
    int_constant     shift, and go to state 25
    real_constant    shift, and go to state 26
    string_constant  shift, and go to state 27

    CONSTANT     go to state 48
    ITEM         go to state 49
    COMPARATION  go to state 98


State 90

   64 ITERATION: op_while id op_in $@7 LIST . op_do $@8 CODE op_endwhile

    op_do  shift, and go to state 99


State 91

   61 ITERATION: op_while $@5 open_parenthesis CONDITION close_parenthesis . $@6 CODE op_endwhile

    $default  reduce using rule 60 ($@6)

    $@6  go to state 100


State 92

   11 DECLARATION: op_dim open_bracket VARIABLES close_bracket op_as . open_bracket DATATYPES close_bracket

    open_bracket  shift, and go to state 101


State 93

   12 VARIABLES: VARIABLES comma id .

    $default  reduce using rule 12 (VARIABLES)


State 94

   36 LIST: open_bracket $@1 ITEMS . close_bracket
   37 ITEMS: ITEMS . comma ITEM

    close_bracket  shift, and go to state 102
    comma          shift, and go to state 103


State 95

   38 ITEMS: ITEM .

    $default  reduce using rule 38 (ITEMS)


State 96

    2 CODE: CODE . BLOCK
   45 DECISION: IF_EVALUATOR CODE op_else $@2 CODE . op_endif

    id          shift, and go to state 1
    op_if       shift, and go to state 2
    op_endif    shift, and go to state 104
    op_while    shift, and go to state 3
    op_dim      shift, and go to state 4
    op_display  shift, and go to state 5
    op_get      shift, and go to state 6
    fun_long    shift, and go to state 7

    BLOCK         go to state 37
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 97

   48 CONDITION: COMPARATION op_and $@3 COMPARATION .

    $default  reduce using rule 48 (CONDITION)


State 98

   50 CONDITION: COMPARATION op_or $@4 COMPARATION .

    $default  reduce using rule 50 (CONDITION)


State 99

   64 ITERATION: op_while id op_in $@7 LIST op_do . $@8 CODE op_endwhile

    $default  reduce using rule 63 ($@8)

    $@8  go to state 105


State 100

   61 ITERATION: op_while $@5 open_parenthesis CONDITION close_parenthesis $@6 . CODE op_endwhile

    id          shift, and go to state 1
    op_if       shift, and go to state 2
    op_while    shift, and go to state 3
    op_dim      shift, and go to state 4
    op_display  shift, and go to state 5
    op_get      shift, and go to state 6
    fun_long    shift, and go to state 7

    CODE          go to state 106
    BLOCK         go to state 10
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 101

   11 DECLARATION: op_dim open_bracket VARIABLES close_bracket op_as open_bracket . DATATYPES close_bracket

    int_type     shift, and go to state 107
    real_type    shift, and go to state 108
    string_type  shift, and go to state 109

    DATATYPES  go to state 110
    DATATYPE   go to state 111


State 102

   36 LIST: open_bracket $@1 ITEMS close_bracket .

    $default  reduce using rule 36 (LIST)


State 103

   37 ITEMS: ITEMS comma . ITEM

    id               shift, and go to state 47
    int_constant     shift, and go to state 25
    real_constant    shift, and go to state 26
    string_constant  shift, and go to state 27

    CONSTANT  go to state 48
    ITEM      go to state 112


State 104

   45 DECISION: IF_EVALUATOR CODE op_else $@2 CODE op_endif .

    $default  reduce using rule 45 (DECISION)


State 105

   64 ITERATION: op_while id op_in $@7 LIST op_do $@8 . CODE op_endwhile

    id          shift, and go to state 1
    op_if       shift, and go to state 2
    op_while    shift, and go to state 3
    op_dim      shift, and go to state 4
    op_display  shift, and go to state 5
    op_get      shift, and go to state 6
    fun_long    shift, and go to state 7

    CODE          go to state 113
    BLOCK         go to state 10
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 106

    2 CODE: CODE . BLOCK
   61 ITERATION: op_while $@5 open_parenthesis CONDITION close_parenthesis $@6 CODE . op_endwhile

    id           shift, and go to state 1
    op_if        shift, and go to state 2
    op_while     shift, and go to state 3
    op_endwhile  shift, and go to state 114
    op_dim       shift, and go to state 4
    op_display   shift, and go to state 5
    op_get       shift, and go to state 6
    fun_long     shift, and go to state 7

    BLOCK         go to state 37
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 107

   16 DATATYPE: int_type .

    $default  reduce using rule 16 (DATATYPE)


State 108

   17 DATATYPE: real_type .

    $default  reduce using rule 17 (DATATYPE)


State 109

   18 DATATYPE: string_type .

    $default  reduce using rule 18 (DATATYPE)


State 110

   11 DECLARATION: op_dim open_bracket VARIABLES close_bracket op_as open_bracket DATATYPES . close_bracket
   14 DATATYPES: DATATYPES . comma DATATYPE

    close_bracket  shift, and go to state 115
    comma          shift, and go to state 116


State 111

   15 DATATYPES: DATATYPE .

    $default  reduce using rule 15 (DATATYPES)


State 112

   37 ITEMS: ITEMS comma ITEM .

    $default  reduce using rule 37 (ITEMS)


State 113

    2 CODE: CODE . BLOCK
   64 ITERATION: op_while id op_in $@7 LIST op_do $@8 CODE . op_endwhile

    id           shift, and go to state 1
    op_if        shift, and go to state 2
    op_while     shift, and go to state 3
    op_endwhile  shift, and go to state 117
    op_dim       shift, and go to state 4
    op_display   shift, and go to state 5
    op_get       shift, and go to state 6
    fun_long     shift, and go to state 7

    BLOCK         go to state 37
    DECLARATION   go to state 11
    ASSIGNMENT    go to state 12
    LENGTH        go to state 13
    INPUT         go to state 14
    OUTPUT        go to state 15
    DECISION      go to state 16
    IF_EVALUATOR  go to state 17
    ITERATION     go to state 18


State 114

   61 ITERATION: op_while $@5 open_parenthesis CONDITION close_parenthesis $@6 CODE op_endwhile .

    $default  reduce using rule 61 (ITERATION)


State 115

   11 DECLARATION: op_dim open_bracket VARIABLES close_bracket op_as open_bracket DATATYPES close_bracket .

    $default  reduce using rule 11 (DECLARATION)


State 116

   14 DATATYPES: DATATYPES comma . DATATYPE

    int_type     shift, and go to state 107
    real_type    shift, and go to state 108
    string_type  shift, and go to state 109

    DATATYPE  go to state 118


State 117

   64 ITERATION: op_while id op_in $@7 LIST op_do $@8 CODE op_endwhile .

    $default  reduce using rule 64 (ITERATION)


State 118

   14 DATATYPES: DATATYPES comma DATATYPE .

    $default  reduce using rule 14 (DATATYPES)
